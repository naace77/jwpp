{"version":3,"sources":["components/Header.js","components/TopMenu.js","menu/mainList.js","components/mainContainer.js","pages/Home.js","pages/Profile.js","shared/App.js","client/Root.js","serviceWorker.js","index.js"],"names":["HeaderContainer","styled","header","_templateObject","TitleName","p","_templateObject2","props","title","Header","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","objectSpread","react_default","a","createElement","Link","to","className","Component","TopMenuContainer","nav","TopMenu_templateObject","display","TopMenuItem","div","TopMenu_templateObject2","TopMenuList","li","_templateObject3","topMenuItemColor","TopMenuListItem","_templateObject4","_templateObject5","itemLink","itemName","TopMenu","_this2","map","item","index","key","height","window","innerHeight","MainContainer","mainList_templateObject","CmdContainer","mainList_templateObject2","CmdListContainer","mainList_templateObject3","isCmdListContainerVisible","CmdInput","input","mainList_templateObject4","CmtTitle","mainList_templateObject5","CmdList","_templateObject6","ListName","_templateObject7","CmdListImte","_templateObject8","windowWidth","innerWidth","windowHeight","MainWrapper","mainContainer_templateObject","width","HomeTop","mainContainer_templateObject2","HomeCenter","mainContainer_templateObject3","HomeRight","mainContainer_templateObject4","HomeMonitor","mainContainer_templateObject5","HomeMonitorItem","mainContainer_templateObject6","MonitorItemAnimation","keyframes","mainContainer_templateObject7","MonitorItem","mainContainer_templateObject8","TopItemAnimation","_templateObject9","TopItem","_templateObject10","RightItemAnimation","_templateObject11","RightItem","_templateObject12","updateWindowDimensions","setState","wrapperWidth","wrapperHeight","addEventListener","Home","mainContainer","Profile","GlobalStyle","createGlobalStyle","App_templateObject","Container","App_templateObject2","HomeContainer","App_templateObject3","App","_cmdInput","inputText","toLocaleLowerCase","isTopMenuVisible","alert","commandList","cmdName","cmdValue","components_Header","components_TopMenu","Route","exact","path","component","Root","BrowserRouter","shared_App","Boolean","location","hostname","match","ReactDOM","render","client_Root","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b7641fbb.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport styled from \"styled-components\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst HeaderContainer = styled.header`\r\n`\r\nconst TitleName = styled.p`\r\n  font-weight : ${props => (props.title === \"top\" ? 1000 : 700)};\r\n  font-size : ${props => (props.title === \"top\" ? \"30px\" : \"20px\")};\r\n  text-align : center;\r\n  color : \"white\";\r\n  background-color : \"white\";\r\n`\r\n\r\nclass Header extends Component {\r\n  constructor(props){\r\n    super()\r\n    this.state={\r\n      ...props,\r\n    }\r\n  }\r\n  render() {\r\n    return (  \r\n      <Link to=\"/\" className =\"header Link\">\r\n        <HeaderContainer>          \r\n          <TitleName title=\"top\">HOME PAGE</TitleName>\r\n          <TitleName title=\"sub\">Kim Jong Woo</TitleName>\r\n        </HeaderContainer>\r\n      </Link>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport styled from \"styled-components\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst TopMenuContainer = styled.nav`\r\n  display : ${props => props.display};\r\n  justify-content: center;\r\n  align-items: center; \r\n`\r\nconst TopMenuItem = styled.div`\r\n  display : flex;\r\n  height : 50px;\r\n  flex-direction: column;\r\n  align-items: center; \r\n  &:hover .topMenuItem { color: yellow; font-size: 20px }\r\n  &:hover .subItem1{ display: flex; }\r\n`\r\nconst TopMenuList = styled.li` \r\n  padding : 0 30px 10px 30px;\r\n  text-align : center;\r\n  color : ${props => (props.topMenuItemColor)};\r\n  list-style: none;\r\n`\r\nconst TopMenuListChildContainer = styled.div`\r\n  display : none;\r\n  width: 50px;\r\n  height: 50px;\r\n  flex-direction: column;\r\n  align-items: center; \r\n  @media ( max-width: 480px ) {\r\n    display : flex;\r\n  }\r\n`\r\nconst TopMenuListChild = styled.a`\r\n  padding : 0 30px 10px 30px;\r\n  text-align : center;\r\n  color : #ffffff;\r\n  &:hover { color: #454545; }\r\n`\r\nconst TopMenuListItem = [{itemLink : \"/profile\", itemName : \"프로필\"},{itemLink : \"/profile\", itemName : \"포트폴리오\"}]\r\nclass TopMenu extends Component {\r\n  constructor(props){\r\n    super()\r\n    this.state={\r\n      ...props,\r\n    }\r\n  }\r\n  render() {\r\n    return (  \r\n        <TopMenuContainer display={this.props.display}>\r\n        {TopMenuListItem.map((item,index)=>{return (\r\n          <TopMenuItem key={index}>\r\n            <TopMenuList key={index} topMenuItemColor={this.props.topMenuItemColor} item=\"item1\">\r\n              <Link to={item.itemLink}className=\"topMenuItem Link\" >{item.itemName}</Link>\r\n            </TopMenuList>\r\n          </TopMenuItem>  \r\n        )})}        \r\n        </TopMenuContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TopMenu;\r\n","import React, { Component } from 'react';\r\nimport styled,{createGlobalStyle} from \"styled-components\";\r\nimport { list } from 'postcss';\r\nconst height = window.innerHeight;\r\nconst MainContainer = styled.div`\r\n  display : flex;\r\n  flex :3;\r\n  flex-direction: column;\r\n  height : ${height/2}px;\r\n  justify-content: center;\r\n  align-items: center; \r\n  @media ( max-width: 480px ) {\r\n    float: none;\r\n    width: auto;\r\n  }\r\n`\r\nconst CmdContainer = styled.div`\r\n  display : flex; \r\n`\r\nconst CmdListContainer = styled.div`\r\n  display :  ${props=> props.isCmdListContainerVisible};\r\n  flex-direction: column;\r\n`\r\nconst CmdInput = styled.input`  \r\n  border : 1px solid #000;\r\n  background-color :#000;\r\n  color:#ffffff;\r\n  margin : 0px 0px 0px 10px;\r\n`\r\nconst CmtTitle = styled.a`\r\n  font-weight : 700;\r\n  font-size : 20px;\r\n  text-align : center;\r\n`\r\nconst CmdList = styled.a`\r\n  font-weight : 700;\r\n  font-size : 15px;\r\n  text-align : center;\r\n  margin-top : 30px;\r\n`\r\nconst ListName = styled.a`\r\n  color : yellow;\r\n`\r\nconst CmdListImte = styled.div`\r\n  margin-top : 10px;\r\n`\r\nclass MainList extends Component {\r\n  constructor(props){\r\n    super()\r\n    this.state={\r\n      ...props,\r\n      cmdValue : \"\",\r\n      cmdList :[{listName : \"showmenu\", listAction :\"메뉴를 보여주는 기능\"}\r\n      ,{listName : \"hidemenu\", listAction :\"메뉴를 숨겨주는 기능\"}\r\n      ,{listName : \"showmenulist\", listAction :\"명령어 리스트를 숨겨주는 기능\"}\r\n      ,{listName : \"hidemenulist\", listAction :\"명령어 리스트를 숨겨주는 기능\"}]\r\n    }\r\n  }\r\n  componentDidMount(){\r\n    this.cmdInput.focus();\r\n  }\r\n  _sendInputText=(e)=>{\r\n    if(e.keyCode === 13){\r\n      this.setState({\r\n        cmdValue : \"\"\r\n      })\r\n      this.props.cmdInput(this.state.cmdValue)\r\n    }\r\n  }\r\n  render() {\r\n    return (     \r\n      <MainContainer>\r\n        <CmdContainer>\r\n            <CmtTitle onClick={()=>{ this.props.cmdInput(\"showmenulist\")}}>Command</CmtTitle>\r\n            <CmdInput \r\n              value = {this.state.cmdValue}\r\n              ref={ref=>{this.cmdInput = ref}}\r\n              placeholder =\"input your cmd ...\"\r\n              onChange ={(e)=>{this.setState({cmdValue : e.target.value})}}\r\n              onKeyDown ={(e)=>{this._sendInputText(e)}}>\r\n            </CmdInput>    \r\n          {/* <h5>\r\n            {\"cmdList : \"}\r\n            {this.state.commandList.map((item)=>{\r\n              return item.cmdName+\"  \"\r\n            })}\r\n          </h5> */}\r\n        </CmdContainer>\r\n        <CmdListContainer isCmdListContainerVisible = {this.props.isCmdListContainerVisible}>\r\n          <CmdList >명령어 리스트</CmdList>\r\n          <CmdListImte>\r\n            {this.state.cmdList.map((item,index)=>{\r\n              \r\n            return <div key = {index}><ListName  onClick={()=>{ this.props.cmdInput(item.listName)}}>{item.listName}</ListName> : {item.listAction} </div>\r\n            \r\n            })}\r\n          </CmdListImte>\r\n        </CmdListContainer>\r\n     </MainContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainList;\r\n","import React, { Component } from 'react';\r\nimport styled, {keyframes} from \"styled-components\";\r\nconst windowWidth = window.innerWidth;\r\nconst windowHeight = window.innerHeight;\r\n\r\n\r\n\r\n\r\nconst MainWrapper = styled.div`\r\n  background-color : white;\r\n    height : ${props => (props.height)};\r\n    width : ${props => (props.width)};\r\n`\r\nconst HomeTop = styled.div`\r\n    background-color : #ff0000;\r\n    display : flex;\r\n    align-items: center;\r\n    width:100%;\r\n    height:20%;\r\n`\r\nconst HomeCenter = styled.div`\r\n    background-color : #ffff00;\r\n    width:100%;\r\n    height:80%;\r\n    position: relative;\r\n`\r\nconst HomeRight = styled.div`\r\n    display : flex;\r\n    align-items: center;\r\n    justify-content:center;\r\n    background-color : #00ffff;\r\n    width:30%;\r\n    height:50%;\r\n    position: absolute;\r\n    right:0;\r\n    bottom:0;\r\n`\r\nconst HomeMonitor = styled.div`\r\n    display : flex;\r\n    background-color : #ddffdd;\r\n    width:80%;\r\n    height:100%;\r\n    position: absolute;\r\n    justify-content:center;\r\n    align-items:center;\r\n`\r\nconst HomeMonitorItem = styled.div`\r\ndisplay : flex;\r\n    justify-content:center;\r\n    align-items:center;\r\n    background-color : #dd1111;\r\n    width:70%;\r\n    height:40%;\r\n    position: absolute;\r\n`\r\nconst MonitorItemAnimation = keyframes`\r\n  from {\r\n    margin-right: 100%;\r\n  }\r\n\r\n  to {\r\n    margin-right: 0%;\r\n  }\r\n`\r\n\r\nconst  MonitorItem = styled.a`\r\n  animation : ${MonitorItemAnimation} 1s;\r\n`\r\n\r\nconst TopItemAnimation = keyframes`\r\n  from {\r\n    margin-top: -10%;\r\n  }\r\n\r\n  to {\r\n    margin-top: 0%;\r\n  }\r\n`\r\n\r\nconst TopItem = styled.a`\r\n  animation : ${TopItemAnimation} 1s;\r\n`\r\nconst RightItemAnimation = keyframes`\r\n  from {\r\n    margin-left: 100%;\r\n  }\r\n\r\n  to {\r\n    margin-left: 0%;\r\n  }\r\n`\r\n\r\nconst RightItem = styled.a`\r\n  animation : ${RightItemAnimation} 1s;\r\n`\r\n\r\nclass MainContainer extends Component {\r\n  constructor(props){\r\n    super()\r\n    this.state={\r\n      ...props,\r\n      wrapperWidth : windowWidth/2 +\"px\",\r\n      wrapperHeight : windowHeight/2 +\"px\"\r\n    }\r\n  }\r\n  updateWindowDimensions=() =>{\r\n    this.setState({ wrapperWidth: window.innerWidth/2 +\"px\", wrapperHeight: window.innerHeight/2 +\"px\" });\r\n  }\r\n  componentDidMount(){\r\n    window.addEventListener('resize', this.updateWindowDimensions);\r\n  }\r\n  render() {\r\n    return (  \r\n        <MainWrapper width={this.state.wrapperWidth} height={this.state.wrapperHeight}>     \r\n          {/* TOP */}\r\n          <HomeTop>\r\n            <TopItem>TOP 내용</TopItem>\r\n          </HomeTop>\r\n          <HomeCenter>     \r\n          {/* COMPUTER */}\r\n          <HomeMonitor>\r\n            <HomeMonitorItem>\r\n              <MonitorItem>모니터 이미지</MonitorItem>\r\n            </HomeMonitorItem>\r\n          </HomeMonitor>\r\n          {/* RIGHT */}       \r\n            <HomeRight>\r\n              <RightItem>오른쪽 이미지</RightItem>\r\n            </HomeRight>\r\n          </HomeCenter>\r\n        </MainWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainContainer;\r\n","import React from 'react';\r\nimport MainContainer from '../components/mainContainer'\r\nimport styled from \"styled-components\";\r\n\r\n\r\n\r\nconst Home = () => {\r\n    return (\r\n            <MainContainer>\r\n            </MainContainer>\r\n    );\r\n};\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nconst Profile = () => {\r\n    return (\r\n        <div>\r\n            <h2>Profile</h2>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import React, { Component } from 'react';\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport Header from '../components/Header'\nimport TopMenu from '../components/TopMenu'\nimport MainList from '../menu/mainList'\nimport { Route } from 'react-router-dom';\nimport { Home, Profile } from 'pages';\n\nconst GlobalStyle = createGlobalStyle`  \n  html {\n    height: 100vh; \n  }\n  body {\n    width :100%;    \n    height: 100vh;  \n    margin : 0 auto;\n    padding : 0px;\n    background-color :#000;\n    color : white;\n  }\n  a.header{\n    color : white;\n  }\n  a.topMenuItem{\n    color : white;\n  }\n  a.Link{\n    text-decoration : none;\n  }\n`\nconst Container = styled.div`\n  display : flex;\n  flex-direction: column;\n  margin: 0 auto;\n`\nconst HomeContainer = styled.div`\n    display : flex;\n    justify-content :center;\n`\n\nclass App extends Component {\n  constructor(props) {\n    super()\n    this.state = {\n      ...props,\n      commandList: [{ cmdName: \"CMD\" }, { cmdName: \"LIST\" }],\n      cmdValue: \"\",\n      isTopMenuVisible: \"flex\",\n      isCmdListContainerVisible: \"flex\",\n      topMenuItemColor: \"#ff00ff\"\n    }\n  }\n  _cmdInput = (inputText) => {\n    inputText = inputText.toLocaleLowerCase();\n    switch (inputText) {\n      case \"showmenu\":\n        this.setState({\n          isTopMenuVisible: \"flex\"\n        })\n        break;\n      case \"hidemenu\":\n        this.setState({\n          isTopMenuVisible: \"none\"\n        })\n        break;\n      case \"showmenulist\":\n        this.setState({\n          isCmdListContainerVisible: \"flex\"\n        })\n        break;\n      case \"hidemenulist\":\n        this.setState({\n          isCmdListContainerVisible: \"none\"\n        })\n        break;\n      default:\n        alert(\"명령어 없음\")\n    }\n\n  }\n  _topItemMouseOver() {\n    if (this.state.topMenuItemColor === \"#ffffff\") {\n      this.setState({ topMenuItemColor: \"#121212\" })\n    } else {\n      this.setState({ topMenuItemColor: \"#ffffff\" })\n    }\n  }\n  render() {\n    return (\n      <Container>\n        <GlobalStyle />\n        <Header></Header>\n        <TopMenu \n          display={this.state.isTopMenuVisible}\n          topMenuItemColor={this.state.topMenuItemColor}>\n        </TopMenu>\n        {/* <MainList\n          cmdInput={this._cmdInput}\n          isCmdListContainerVisible={this.state.isCmdListContainerVisible}\n        ></MainList> */}\n        <HomeContainer>\n          <Route exact path=\"/\" component={Home}/>\n          <Route path=\"/jwpp\" component={Home}/>\n          <Route path=\"/profile\" component={Profile}/>\n        </HomeContainer>\n\n      </Container>\n\n    );\n  }\n}\n\nexport default App;\n","import React from 'react'\r\nimport {BrowserRouter} from 'react-router-dom'\r\nimport App from 'shared/App'\r\n\r\nconst Root = () => (\r\n    <BrowserRouter>\r\n        <App/>\r\n    </BrowserRouter>\r\n);\r\n\r\nexport default Root;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Root from './client/Root';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}